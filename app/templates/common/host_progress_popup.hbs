{{!
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
}}

<div class="host-component-popup-wrap">

    {{#if view.parentView.isLoaded}}
    {{!-- SERVICES --}}

    <div {{bindAttr class="view.parentView.isServiceListHidden:hidden :task-list-main-warp"}}>
      <div class="task-top-wrap">
        <div class="operation-name-top">{{t common.operations}}</div>
        <div class="start-time-top">{{t common.startTime}}</div>
        <div class="duration-top">{{t common.duration}}</div>
        <div class="select-wrap">
          {{t common.show}}:
          {{view Ember.Select
            contentBinding="view.categories"
            optionValuePath="content.value"
            optionLabelPath="content.label"
            selectionBinding="view.serviceCategory"
          }}
        </div>
      </div>
      <div id="service-info">
        {{#if view.isServiceEmptyList}}
          <div class="log-list-wrap">{{t hostPopup.noServicesToShow}}</div>
        {{else}}
          {{#each servicesInfo in view.services}}
            <div {{bindAttr class="servicesInfo.isVisible::hidden :log-list-wrap"}}>
              <div {{action gotoHosts servicesInfo}} class="task-list-line-cursor">
                <div class="operation-name-icon-wrap">
                  {{view statusIcon servicesInfoBinding="servicesInfo"}}
                  <a href="#">
                    {{servicesInfo.name}}
                  </a>
                  {{#if App.supports.abortRequests}}
                    {{#if servicesInfo.isAbortable}}
                        {{view abortIcon servicesInfoBinding="servicesInfo"}}
                    {{/if}}
                  {{/if}}
                </div>
                <div class="time-summary start-time-text">{{servicesInfo.startTime}}</div>
                <div class="time-summary duration-text">{{servicesInfo.duration}}</div>
                <div class="progress-bar span2">
                  <div {{bindAttr class="servicesInfo.isInProgress:progress-striped servicesInfo.isInProgress:active servicesInfo.barColor :progress"}}>
                    <div class="bar" {{bindAttr style="servicesInfo.barWidth"}}></div>
                  </div>
                </div>
                <div class="host-progress-num">{{servicesInfo.progress}}%</div>
                <div class="show-details"><i class="icon-caret-right"></i></div>
              </div>
            </div>
          {{/each}}
        {{/if}}
        {{#if view.isShowMore}}
            <div class="show-more" {{action requestMoreOperations}}><a href="#">{{t hostPopup.serviceInfo.showMore}}</a></div>
        {{/if}}
      </div>
    </div>


  {{!-- HOSTS ---}}

  <div {{bindAttr class="view.parentView.isHostListHidden:hidden :task-list-main-warp"}}>
    <div class="task-top-wrap">
      {{#if controller.isBackgroundOperations}}
        <a class="task-detail-back-to-hosts" href="javascript:void(null)" {{action backToServiceList}} >
          <i class="icon-arrow-left"></i>&nbsp;{{t common.operations}}
        </a>
      {{/if}}
      <span class="task-detail-log-rolename" >{{t common.hosts}}</span>
      <div class="select-wrap">
        {{t common.show}}:
        {{view Ember.Select
          contentBinding="view.categories"
          optionValuePath="content.value"
          optionLabelPath="content.label"
          selectionBinding="view.hostCategory"
        }}
      </div>
    </div>
    {{#if view.isRequestSchedule}}
      {{#if view.sourceRequestScheduleRunning}}
        <div class="alert alert-info request-schedule-abort">
          {{t hostPopup.bgop.sourceRequestSchedule.running}}
          <button type="button" class="btn btn-warning pull-right"
            {{action doAbortRequestSchedule view.sourceRequestScheduleId target="view"}}>
            {{view.requestScheduleAbortLabel}}
          </button>
        </div>
      {{/if}}
      {{#if view.sourceRequestScheduleAborted}}
        <div class="alert alert-info request-schedule-abort">
          {{t hostPopup.bgop.sourceRequestSchedule.aborted}}
        </div>
      {{/if}}
    {{/if}}
    {{#if view.isLevelLoaded}}
        <div id="host-info" {{bindAttr class="view.isRequestSchedule:scheduled"}}>
          {{#if view.isHostEmptyList}}
              <div class="log-list-wrap">{{t hostPopup.noHostsToShow}}</div>
          {{else}}
            {{#each hostInfo in view.pageContent}}
                <div {{bindAttr class="hostInfo.isVisible::hidden :log-list-wrap"}}>
                    <div {{action gotoTasks hostInfo}} class="task-list-line-cursor">
                        <div class="host-name-icon-wrap">
                          {{view statusIcon servicesInfoBinding="hostInfo"}}
                            <a href="#">
                              {{hostInfo.displayName}}
                            </a>
                        </div>
                        <div class="progress-bar span2">
                            <div {{bindAttr class="hostInfo.isInProgress:progress-striped :active hostInfo.barColor :progress"}}>
                                <div class="bar" {{bindAttr style="hostInfo.barWidth"}}></div>
                            </div>
                        </div>
                        <div class="host-progress-num">{{hostInfo.progress}}%</div>
                        <div class="show-details"><i class="icon-caret-right"></i></div>
                    </div>
                </div>
            {{/each}}
          {{/if}}
        </div>
    {{else}}
      <div class="spinner"></div>
    {{/if}}
  </div>


  {{!-- TASKS ---}}

  <div {{bindAttr class="view.parentView.isTaskListHidden:hidden :task-list-main-warp"}}>
    <div class="task-top-wrap">
      <a class="task-detail-back-to-hosts" href="javascript:void(null)" {{action backToHostList}} ><i class="icon-arrow-left"></i>&nbsp;{{t common.hosts}}</a>
      <div class="task-name-top task-detail-log-rolename">{{t common.tasks}}</div>
      <div class="select-wrap tasks-list-select">
        {{t common.show}}:
        {{view Ember.Select
          contentBinding="view.categories"
          optionValuePath="content.value"
          optionLabelPath="content.label"
          selectionBinding="view.taskCategory"
        }}
      </div>
    </div>
    <div id="host-log">
      {{#if view.isTasksEmptyList}}
        <div class="log-list-wrap">{{t hostPopup.noTasksToShow}}</div>
      {{else}}
        {{#each taskInfo in view.tasks}}
          <div {{bindAttr class="taskInfo.isVisible::hidden :log-list-wrap"}}>
            <div {{action toggleTaskLog taskInfo}} class="task-list-line-cursor">
              <div class="operation-name-icon-wrap">
                {{view statusIcon servicesInfoBinding="taskInfo"}}
                <a href="#">
                  {{taskInfo.commandDetail}}
                </a>
              </div>
              <div class="show-details"><i class="icon-caret-right"></i></div>
            </div>
          </div>
        {{/each}}
      {{/if}}
    </div>
  </div>


  <!-- TASK DETAILS --->

  <div {{bindAttr class="view.parentView.isLogWrapHidden:hidden :task-detail-info"}}>
    <div class="task-top-wrap">
      <a class="task-detail-back" href="javascript:void(null)" {{action backToTaskList}} ><i class="icon-arrow-left"></i>&nbsp;{{t common.tasks}}</a>
      <div>
        <i {{bindAttr class="view.openedTask.status :task-detail-status-ico view.openedTask.icon"}}></i>
        <div class="task-detail-ico-wrap">
          <a title="Click to Copy" {{action "textTrigger" taskInfo target="view"}} class="task-detail-copy"><i class="icon-copy"></i> {{t common.copy}}</a>
          <a title="Open in New Window" {{action openTaskLogInDialog}} class="task-detail-open-dialog"><i class="icon-external-link"></i> {{t common.open}}</a>
        </div>
        <span class="task-detail-log-rolename" >{{view.openedTask.commandDetail}}</span>
      </div>
    </div>
    {{#if view.isLevelLoaded}}
        <div class="task-detail-log-info">
            <div class="content-area">
                <div class="task-detail-log-clipboard-wrap"></div>
                <div class="task-detail-log-maintext">  
                    {{#if view.openedTask.isRebalanceHDFSTask }}
                      <h5>{{t services.hdfs.rebalance.title}}</h5>
                      <div class="progresspopup-rebalancehdfs">
                        <div {{bindAttr class=":progress view.openedTask.isInProgress:progress-striped view.openedTask.barColor :active"}}>
                          <div class="bar" {{bindAttr style="view.openedTask.completionProgressStyle"}}></div>
                        </div>
                      </div>
                      <div class="clearfix">
                        <div class="pull-left">
                          {{view.openedTask.dataMoved}} moved /
                          {{view.openedTask.dataLeft}} left /
                          {{view.openedTask.dataBeingMoved}} being processed
                        </div>
                        {{#if view.openedTask.isNotComplete}}
                          <button class="btn btn-danger pull-right" {{action stopRebalanceHDFS}}>{{t common.cancel}}</button>
                        {{/if}}
                      </div>
                      <hr>
                    {{/if}}
                    <h5>stderr: &nbsp; <span class="muted">{{view.openedTask.errorLog}} </span></h5>
                    <pre class="stderr">{{view.openedTask.stderr}}</pre>
                    <h5>stdout: &nbsp; <span class="muted"> {{view.openedTask.outputLog}} </span></h5>
                    <pre class="stdout">{{view.openedTask.stdout}}</pre>
                </div>
            </div>
        </div>
    {{else}}
      <div class="spinner"></div>
    {{/if}}
  </div>
    {{else}}
      <div class="spinner"></div>
    {{/if}}
</div>
{{#if view.isPaginate}}
  <div class="page-bar pull-right no-borders mtm">
    <div class="items-on-page">
      <label>{{t common.show}}: {{view view.rowsPerPageSelectView selectionBinding="view.displayLength"}}</label>
    </div>
    <div class="info">{{view.paginationInfo}}</div>
    <div class="paging_two_button">
      {{view view.paginationFirst}}
      {{view view.paginationLeft}}
      {{view view.paginationRight}}
      {{view view.paginationLast}}
    </div>
  </div>
{{/if}}
